AWSTemplateFormatVersion: '2010-09-09'

Description: CloudFormation template to create a Lambda function

Parameters:
  LambdaFunctionName:
    Type: String
    Default: MyLambdaFunction
    Description: Name of the Lambda function

  LambdaRuntime:
    Type: String
    Default: python3.9
    AllowedValues:
      - python3.8
      - python3.9
      - nodejs16.x
      - nodejs18.x
    Description: Runtime environment for the Lambda function

  LambdaHandler:
    Type: String
    Default: index.handler
    Description: The function within your code that Lambda calls to begin execution

Resources:
  # IAM role for Lambda to assume
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${LambdaFunctionName}-execution-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com  # Lambda service principal
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"  # Grant access to CloudWatch Logs

  # Lambda function definition
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName  # Lambda function name from parameter
      Runtime: !Ref LambdaRuntime  # Runtime environment
      Handler: !Ref LambdaHandler  # Handler function
      Role: !GetAtt LambdaExecutionRole.Arn  # IAM role ARN for Lambda execution
      Code:
        ZipFile: |
          # Simple inline Lambda function (Python)
          def handler(event, context):
              return {
                  'statusCode': 200,
                  'body': 'Hello from Lambda!'
              }

Outputs:
  LambdaFunctionName:
    Description: Name of the Lambda function created
    Value: !Ref MyLambdaFunction
